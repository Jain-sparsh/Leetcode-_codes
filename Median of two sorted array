class Solution {
public:
    double findMedianSortedArrays(vector<int>& num1, vector<int>& num2) {

        int n1=num1.size();
        int n2=num2.size();
        if(n1>n2)return findMedianSortedArrays(num2,num1);

        int l=0, h=n1;
        int length=(n1+n2 +1 )>>1;
        while(l<=h){
            int m1=(l+h)>>1;
            int m2=length-m1;
            int l1,l2,r1,r2;
            l1=l2=INT_MIN;
            r1=r2=INT_MAX;
            if(m1<n1)r1=num1[m1];
            if(m2<n2)r2=num2[m2];
            if(m1-1 >=0)l1=num1[m1-1];
            if(m2-1  >=0)l2=num2[m2-1];
            if(l2<=r1 && l1<=r2){
                if( (n1+n2)%2 ==1)return (double)max(l1,l2);
                else{
                    return (double)(max(l1,l2) + min(r1,r2)) /2.0;
                }
            }
            else if(l1>r2) h=m1-1;
            else l=m1+1;

        }       
        return 0; 
    }
};
