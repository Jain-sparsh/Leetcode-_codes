class Solution {
public:
    int minMutation(string start, string end, vector<string>& bank) {
        
        unordered_set<string> vis;
        int count=0;
        queue<string>q;
        q.push(start);
        vis.insert(start);
        while(!q.empty()){
            int n=q.size();
            for(int i=0;i<n;i++){
                string node=q.front();
                q.pop();
                if(node==end)return count;

                for(char c:"ACGT"){
                    for(int i=0;i<node.size();i++){
                        string adjnode=node;
                        adjnode[i]=c;
                        if(!vis.count(adjnode) && find(bank.begin(),bank.end(),adjnode)!=bank.end() ){
                            q.push(adjnode);
                            vis.insert(adjnode);

                        }
                    }
                }
            }
            count++;
        }
        return -1;
    }
};
