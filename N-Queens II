class Solution {
public:
    bool issafe(int row , int col ,vector<vector<int>> &board, int n ){
       

        int x=row;
        int y=col;
        while(y>=0){
            if(board[x][y]==1)return false;
            y--;
        }

        x=row;
        y=col;
        while(y>=0 && x>=0){
            if(board[x][y]==1)return false;
            x--;
            y--;
        }

         x=row;
         y=col;
        while(x<n && y>=0){
            if(board[x][y]==1)return false;
            x++;
            y--;
        }
        return true;
    }
    void solve( int col ,vector<vector<int>> &board, int n , int & ans){
        if(col==n){
            ans++;
            return ;
        }

        for(int row=0;row<n;row++){
            if(issafe(row,col,board,n)){
                board[row][col]=1;
                solve(col+1,board,n,ans);
                board[row][col]=0;
            }
        }

    }
    int totalNQueens(int n) {
        vector<vector<int>> board(n,vector<int>(n,0));
        int ans=0;
        solve(0,board,n,ans);
        return ans;
        
    }
};
