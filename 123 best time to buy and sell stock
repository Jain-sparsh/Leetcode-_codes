class Solution {
public:
    int solve(int index , int buy, vector<int>& prc , vector<vector<vector<int>>> & dp,int limit ){
        if(index==prc.size()){
            return 0;
        }
        if(limit ==0 )return 0;
        if(dp[index][buy][limit]!=-1)return dp[index][buy][limit];
        int prf=0;
        if(buy){
            int cb=-prc[index] + solve(index + 1 , 0 , prc,dp,limit);
            int cs=0 + solve(index + 1 , 1 , prc,dp,limit);
            prf=max(cb,cs);

        }
        else{
            int csell=prc[index] + solve(index + 1 , 1 , prc,dp,limit-1);
            int cs=0 + solve(index + 1 , 0 , prc,dp,limit);
            prf=max(cs,csell);

        }
        return dp[index][buy][limit]= prf;
    }
    int solvetab(vector <int > &prc){
       // vector<vector<vector<int>>> dp(prc.size()+1,vector<vector<int>>(2,vector<int>(3,0) ));
       vector<vector<int>> cur(2,vector<int>(3,0));
       vector<vector<int>> next(2,vector<int>(3,0));
        for(int index=prc.size()-1;index>=0;index--){
            for(int buy=0;buy<=1;buy++){
                for (int limit =1;limit<=2;limit++){




            int prf=0;
            if(buy){
            int cb=-prc[index] + next[0][limit];
            int cs=0 + next[1][limit];
            prf=max(cb,cs);

        }
        else{
            int csell=prc[index] + next[1][limit-1];
            int cs=0 + next[0][limit];
            prf=max(cs,csell);

        }
         cur[buy][limit]= prf;


                }
                
            } next=cur;

        }
     return next[1][2];
    }
    int maxProfit(vector<int>& prices) {
        
        return solvetab(prices); 
    }
};
