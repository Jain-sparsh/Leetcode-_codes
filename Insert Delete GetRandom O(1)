class RandomizedSet {
public:
    unordered_map<int,int> mp;
    vector<int> ans;
    RandomizedSet() {
        
    }
    
    bool insert(int val) {
        if(mp.count(val)){
            return false;

        }
        ans.push_back(val);
        mp[val]=ans.size()-1;
        return true;
        
    }
    
    bool remove(int val) {
        if(mp.count(val)){
            int i=mp[val];
            ans[i]=ans[ans.size()-1];
            mp[ans[i]]=i;

            ans.pop_back();
            mp.erase(val);
            return true;


        }
        return false;
    }

        
    
    
    int getRandom() {
        int i=rand()%ans.size();
        return ans[i];
        
    }
};

/**
 * Your RandomizedSet object will be instantiated and called as such:
 * RandomizedSet* obj = new RandomizedSet();
 * bool param_1 = obj->insert(val);
 * bool param_2 = obj->remove(val);
 * int param_3 = obj->getRandom();
 */
