class Solution {
public:
    bool solve( int cur, int i , int j , string  word , vector<vector<char>>& board , vector<vector<bool>> & vis ){
        if(cur==word.length()-1){
            return true;
        }

        if(i-1>=0 && board[i-1][j]==word[cur+1] && !vis[i-1][j]){
            vis[i-1][j]=1;
            bool ans= solve(cur+1 , i-1 , j , word, board,vis);
            if(ans)return true;
            vis[i-1][j]=0;
        }
         if(j-1>=0 && board[i][j-1]==word[cur+1] && !vis[i][j-1]){
            vis[i][j-1]=1;
            bool ans= solve(cur+1 , i , j-1 , word, board,vis);
            if(ans)return true;
            vis[i][j-1]=0;
        }

         if(i+1<board.size() && board[i+1][j]==word[cur+1] && !vis[i+1][j]){
            vis[i+1][j]=1;
            bool ans= solve(cur+1 , i+1 , j , word, board,vis);
            if(ans)return true;
            vis[i+1][j]=0;
        }

         if(j+1<board[0].size() && board[i][j+1]==word[cur+1] && !vis[i][j+1]){
            vis[i][j+1]=1;
            bool ans= solve(cur+1 , i , j+1 , word, board,vis);
            if(ans)return true;
            vis[i][j+1]=0;
        }

        return false;

    }
    bool exist(vector<vector<char>>& board, string word) {
        vector<vector<bool>> vis(board.size(),vector<bool>(board[0].size(),0) );
        for(int i=0;i<board.size();i++){
            for(int j=0;j<board[0].size();j++){
                vis[i][j]=1;
                if(board[i][j]==word[0] && solve(0,i,j,word,board,vis)) return true;
                vis[i][j]=0;
            }
        }
      return false;
    }
};
