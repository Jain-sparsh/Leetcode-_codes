/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
struct compare{
    bool operator()(ListNode* a , ListNode*b){
        return a->val>b->val;
    }

};
    ListNode* mergeKLists(vector<ListNode*>& list) {
        priority_queue<ListNode*,vector<ListNode*>,compare> pq; 
        for(auto x: list){
            if(x)pq.push(x);
        }
        ListNode* head , * tail;
        head=NULL;
        tail=NULL;

        while(!pq.empty()){
            auto temp=pq.top();
            pq.pop();
            if(!head){
                head=temp;
                tail=head;
            }
            else{
                tail->next=temp;
                tail=tail->next;
            }

            if(temp->next){
                pq.push(temp->next);
            }


        }
        return head;

    }
};
